openapi: 3.0.3
info:
  title: People Skills Service
  description: People Skills service rest specification.
  version: 1.0.0
servers:
  - url: "http://localhost"
    description: People Skills service

paths:
  '/people':
    post:
      description: Create a person
      tags:
        - people
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Successful response with the people
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    get:
      description: Retrive all people.
      tags:
        - people
      operationId: getAllPeople
      responses:
        '200':
          description: Successful response with the People data.
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Person'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'

  '/people/{id}':
    put:
      description: Update People
      tags:
        - people
      operationId: update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Successful response with the People
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    get:
      description: Retrive People by id.
      tags:
        - people
      operationId: getById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the People data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'
    delete:
      description: Delete People
      tags:
        - people
      operationId: deletePerson
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: No content
        '404':
          description: error response when there are no data to proceed the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'
        '500':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'

  '/people/{id}/skills':
    patch:
      description: create people skill
      tags:
        - people
      operationId: createPersonSkill
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "array"
              items:
                $ref: '#/components/schemas/PersonSkill'
      responses:
        '200':
          description: Successful response with the People
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/PersonSkill'
    get:
      description: get person skill
      tags:
        - people
      operationId: getPersonSkill
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the People
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/PersonSkill'

  '/skills':
    post:
      description: Create Skills
      tags:
        - skills
      operationId: create

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'

      responses:
        '200':
          description: Successful response with the created Skills.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
    get:
      description: get all skills.
      tags:
        - skills
      operationId: getAllSkills
      responses:
        '200':
          description: Successful response with the Skills data.
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Skill'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'


  '/skills/{id}':
    put:
      description: Update Skills
      tags:
        - skills
      operationId: update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
      responses:
        '200':
          description: Successful response with the People
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
    get:
      description: get Skills by id.
      tags:
        - skills
      operationId: getById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the Skills data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'

        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'
    delete:
      description: delete Skills
      tags:
        - skills
      operationId: delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: No content
        '404':
          description: error response when there are no data to proceed the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'
        '500':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleDataServiceError'

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        personalSkill:
          type: array
          items:
            $ref: "#/components/schemas/PersonSkill"

    Skill:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string

    PersonSkill:
      type: object
      properties:
        skillId:
          type: string
        level:
          $ref: '#/components/schemas/SkillLevel'


    PeopleDataServiceError:
      description: The response object returning from the server end if there are any exceptions occured
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/PeopleDataServiceErrorType'
        errorDescription:
          type: string

    PeopleDataServiceErrorType:
      type: string
      enum:
        - INTERNAL_SERVER_ERROR
        - DATA_NOT_FOUND
        - BAD_REQUEST
        - UNAUTHORIZED

    SkillLevel:
      type: string
      enum:
        - EXPERT
        - PRACTITIONER
        - WORKING
        - AWARENESS

